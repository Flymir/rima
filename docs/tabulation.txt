    --! env rima = require("rima") io = require("io")

# Rima Manual: Tabulation

[ [Contents](contents.html) | Previous: [Functions](functions.html) | Next: [Optimization Models](modelling.html) ]

Sometimes there's not much difference between indexing a variable and calling a function.
Rima's `tabulate` function allows you to make the link:

    Q, x, y = rima.R"Q, x, y"
    e = rima.sum{Q}(x[Q])
    S = rima.scope.create{ Q={4, 5, 6} }
    S.x = rima.tabulate({y}, y^2)
    =rima.E(e, S)                                       --> 77

`rima.tabulate' takes names of its arguments (the indexes on the subscript expression) as its first argument
and the expression to evaluate as its second.

Keep in mind that the arguments passed to tabulate are *indexes* into a table.
Indexes are not normal variables.
You can get the value of the set element pointed to by index with `rima.value`
(this is only really useful if the value is a number)
and the index of the element with `rima.ord`.

Note that rima always iterates through sets with ipairs, not pairs, so indexes are always numbers,
and you can't expect to see any non-array members of the table defining the set.


[ [Contents](contents.html) | Previous: [Functions](functions.html) | Next: [Optimization Models](modelling.html) ]
